/* Styles are applied to each node by src/lvrend.cpp setNodeStyle(),
 * on each rendering and re-rendering, recursively, with the following flow:
 * 1) All nodes default style starts with the constructor values
 * for css_style_rec_tag() in include/lvstyles.h.
 * (Some other initial values for the root element style are set in
 * src/lvtinydom.cpp ldomDocument::setRenderProps())
 * 2) Known elements default styles for display: and white-space: are
 * then set according to the definitions in include/fb2def.h and the
 * macros in include/dtddef.h.
 * 3) This (or some other) "external" stylesheet and possible style tweaks
 * declarations are applied to each node if the selector match.
 * 4) Embedded/internal stylesheet are applied
 * 5) Then, styles inheritance is applied and propagate some styles from
 * the parent node (what is inherited and how inheritance takes place is
 * at the end of src/lvrend.cpp setNodeStyle())
 */

body {
    text-indent: 0;
    margin: 0;
    text-align: justify;
}
/* EPUB container of each individual HTML file */
DocFragment {
    page-break-before: always;
}

/* style is now 'display: none' too, but was 'inline' previously - managed by lvrend.cpp */
head, form, script {
    display: none;
}

/* Headings */
h1, h2, h3, h4, h5, h6 {
    display: block; /* default in fb2def.h, past and present */
    margin-top: 0.7em;
    margin-bottom: 0.5em;
    font-weight: bold;
    text-align: center;
    text-indent: 0;
    hyphenate: none;
    adobe-hyphenate: none;
}
h1, h2, h3 {
    page-break-before: always;
    page-break-inside: avoid;
    page-break-after: avoid;
}
h4, h5, h6 {
    page-break-inside: avoid;
    page-break-after: avoid;
}
h1 { font-size: 150%; }
h2 { font-size: 140%; }
h3 { font-size: 130%; }
h4 { font-size: 120%; }
h5 { font-size: 110%; }

/* Block elements */
div {
    display: block; /* default in fb2def.h, past and present */
    margin: 1px;
}
p {
    text-align: justify;
    text-indent: 1.2em;
    margin-top: 0;
    margin-bottom: 0;
}
hr {
    height: 2px;
    background-color: #808080;
    margin-top: 0.5em;
    margin-bottom: 0.5em;
}

/* Images */
/* inline in fb2def.h, past and present */
img {
    text-align: center;
    text-indent: 0;
    display: block;
    /* should it really be block and centered when standalone?
     * or inline as img are everywhere else, and publisher would
     * have to wrap it in <div> to block/center it
     * Note that if block, lvrend.cpp displays the title="" content
     * under the image */
}
sup img { display: inline; }
sub img { display: inline; }
a img   { display: inline; }
p img   { display: inline; }

/* Lists */
/* display: are the default in fb2def.h, past and present, but
 * useful to see here to know which are classic containers or not */
li {
    display: list-item;
    text-indent: 0;
}
ul {
    display: block;
    list-style-type: disc;
    margin-left: 1em;
}
ol {
    display: block;
    list-style-type: decimal;
    margin-left: 1em;
}

/* Definitions */
dl {
    margin-left: 0;
}
dt {
    display: block; /* default in fb2def.h, past and present */
    margin-left: 0;
    margin-top: 0.3em;
    font-weight: bold;
}
dd {
    display: block; /* default in fb2def.h, past and present */
    margin-left: 1.3em;
}

/* Tables */
table {
    font-size: 80%;
    margin: 3px;
}
td, th {
    text-indent: 0;
    padding: 3px;
}
th {
    font-weight: bold;
    text-align: center;
    background-color: #DDD;
}
table caption {
    text-indent: 0;
    padding: 4px;
    background-color: #EEE;
}

/* Monospace block and inline elements */
pre {
    display: block;   /* default in fb2def.h, past and present */
    white-space: pre; /* default in fb2def.h, past and present */
    text-align: left;
    font-family: "Droid Sans Mono", "Liberation Mono", "DeJaVu Sans Mono", monospace;
    margin-top: 0.5em;
    margin-bottom: 0.5em;
    /* background-color: #BFBFBF; */
}
code {
    white-space: pre; /* default in fb2def.h, past and present */
    text-align: left;
    font-family: "Droid Sans Mono", "Liberation Mono", "DeJaVu Sans Mono", monospace;
}

/* Inline elements */
/* Now, all elements default to inline. Before 20180524, they
 * defaulted to 'inherit' and only those specified as 'inline'
 * in fb2def.h and this stylesheet were inline */
span {
    display: inline; /* default in fb2def.h, past and present */
}

sub {
    vertical-align: sub;
    font-size: 70%;
}
sup {
    vertical-align: super;
    font-size: 70%;
}

small                   { font-size: 80%; }
big                     { font-size: 130%; }
b, strong               { font-weight: bold; }
i, em, dfn, var, cite   { font-style: italic; }
u                       { text-decoration: underline; }
del, s, strike,         { text-decoration: line-through; }

a {
    display: inline; /* default in fb2def.h, past and present */
    text-decoration: underline;
    color: gray;
}

nobr { /* does that really exist? needed ? */
    display: inline;
    hyphenate: none;
    white-space: nowrap;
}


/* Old element or className base selectors involving display: that
 * we need to support for older gDOMVersionRequested */

.title, .title1, .title2, .title3, .title4, .title5, .subtitle {
    -cr-ignore-if-dom-version-greater-or-equal: 20180528;
    display: block;
}
b, strong, i, em, dfn, var, q, u, del, s, strike, small, big, sub, sup, acronym, tt, sa mp, kbd, code {
    /* with dom_version < 20180528, elements default to display: inherit
     * these ones were explicitely set to inline */
    -cr-ignore-if-dom-version-greater-or-equal: 20180528;
    display: inline;
}
p image {
    -cr-ignore-if-dom-version-greater-or-equal: 20180528;
    display: inline;
}
.fb2_info {
    -cr-ignore-if-dom-version-greater-or-equal: 20180528;
    display: block;
}
.code {
    -cr-ignore-if-dom-version-greater-or-equal: 20180528;
    display: block;
}
